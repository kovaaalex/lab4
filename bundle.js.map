{"version":3,"file":"bundle.js","mappings":"MAAA,MAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAASF,SAASG,eAAe,cACjCC,EAAaJ,SAASG,eAAe,WACrCE,EAAWL,SAASG,eAAe,aACnCG,EAAiBN,SAASG,eAAe,mBACzCI,EAAS,mCAGfR,EAAMS,iBAAiB,SAAS,WAC5BC,KAAKC,MAAQD,KAAKC,MAAMC,QAAQ,OAAQ,IACrB,MAAfF,KAAKC,QACLD,KAAKC,MAAQ,GAErB,IAEAR,EAAOM,iBAAiB,SAExBI,iBACI,MAAMC,EAAOd,EAAMW,MAAMI,OACzB,GAAKD,EAAL,CAEAT,EAAWW,MAAMC,QAAU,OAC3BX,EAASY,YAAc,GACvBX,EAAeY,UAAY,GAE3B,IAEI,MAAMC,EAAe,mDAAmDC,mBAAmBP,oBAAuBN,IAC5Gc,QAA0BC,MAAMH,GAEtC,IAAKE,EAAkBE,GACnB,MAAM,IAAIC,MAAM,6BAGpB,MAAMC,QAAeJ,EAAkBK,OAEvC,IAAKD,EAAOE,OACR,MAAM,IAAIH,MAAM,qBAIpB,MAAMI,EAAkBH,EAAOI,KAAIC,IAC/B,MAAMC,EAAa,uDAAuDD,EAASE,WAAWF,EAASG,0BAA0B1B,YACjI,OAAOe,MAAMS,GAAYG,MAAKC,GAAOA,EAAIT,QAAO,KAa5D,SAA2BD,EAAQW,GAC/B/B,EAASY,YAAc,oBAAoBmB,EAAgBT,SAE3D,IAAIU,EAAc,GAElBD,EAAgBE,SAAQ,CAACC,EAAaC,KAClC,MAAM3B,EAAOY,EAAOe,GACpBH,GAAe,iEAEDxB,EAAK4B,SAAS5B,EAAK6B,YAAY7B,EAAK8B,OAAS,8CACjCC,KAAKC,MAAMN,EAAYO,KAAKC,kDAC1BH,KAAKC,MAAMN,EAAYO,KAAKE,iDACnCT,EAAYU,QAAQ,GAAGC,kDACpBX,EAAYO,KAAKK,4CACrBP,KAAKC,MAAMN,EAAYa,KAAKC,gDACzBT,KAAKC,MAAkC,IAA5BN,EAAYO,KAAKQ,wFACGf,EAAYU,QAAQ,GAAGM,qBAAqBhB,EAAYU,QAAQ,GAAGH,4DAGxH,IAGLxC,EAAeY,UAAYmB,EAC3BjC,EAAWW,MAAMC,QAAU,OAC/B,CAjCQwC,CAAkB/B,QADYgC,QAAQC,IAAI9B,GAG9C,CAAE,MAAO+B,GACLtD,EAASY,YAAc,GACvBX,EAAeY,UAAY,oCAAoCyC,EAAMC,cACrExD,EAAWW,MAAMC,QAAU,OAC/B,CAlCiB,CAmCrB,G","sources":["webpack://openweather/./src/script.js"],"sourcesContent":["const input = document.querySelector('input');\r\nconst button = document.getElementById('getWeather');\r\nconst weatherDiv = document.getElementById('weather');\r\nconst cityName = document.getElementById('city-name');\r\nconst weatherDetails = document.getElementById('weather-details');\r\nconst apiKey = process.env.APIKEY;\r\n\r\n// Запрет на ввод пробелов первыми символами\r\ninput.addEventListener('input', function() {\r\n    this.value = this.value.replace(/^\\s+/, '');\r\n    if (this.value === ' ') {\r\n        this.value = '';\r\n    }\r\n});\r\n\r\nbutton.addEventListener('click', getWeather);\r\n\r\nasync function getWeather() {\r\n    const city = input.value.trim();\r\n    if (!city) return;\r\n\r\n    weatherDiv.style.display = 'none';\r\n    cityName.textContent = '';\r\n    weatherDetails.innerHTML = '';\r\n\r\n    try {\r\n        // 1. Сначала получаем список всех городов с таким названием\r\n        const geocodingUrl = `https://api.openweathermap.org/geo/1.0/direct?q=${encodeURIComponent(city)}&limit=5&appid=${apiKey}`;\r\n        const geocodingResponse = await fetch(geocodingUrl);\r\n        \r\n        if (!geocodingResponse.ok) {\r\n            throw new Error('Ошибка при поиске городов');\r\n        }\r\n\r\n        const cities = await geocodingResponse.json();\r\n        \r\n        if (!cities.length) {\r\n            throw new Error('Города не найдены');\r\n        }\r\n\r\n        // 2. Для каждого города получаем погоду\r\n        const weatherPromises = cities.map(cityData => {\r\n            const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${cityData.lat}&lon=${cityData.lon}&units=metric&appid=${apiKey}&lang=ru`;\r\n            return fetch(weatherUrl).then(res => res.json());\r\n        });\r\n\r\n        const weatherDataList = await Promise.all(weatherPromises);\r\n        displayAllWeather(cities, weatherDataList);\r\n\r\n    } catch (error) {\r\n        cityName.textContent = '';\r\n        weatherDetails.innerHTML = `<p class=\"error-message\">Ошибка: ${error.message}</p>`;\r\n        weatherDiv.style.display = 'block';\r\n    }\r\n}\r\n\r\nfunction displayAllWeather(cities, weatherDataList) {\r\n    cityName.textContent = `Найдено городов: ${weatherDataList.length}`;\r\n    \r\n    let weatherHTML = '';\r\n    \r\n    weatherDataList.forEach((weatherData, index) => {\r\n        const city = cities[index];\r\n        weatherHTML += `\r\n            <div class=\"city-weather\">\r\n                <h3>${city.name}, ${city.country} (${city.state || '—'})</h3>\r\n                <p>Температура: ${Math.round(weatherData.main.temp)}°C</p>\r\n                <p>Ощущается как: ${Math.round(weatherData.main.feels_like)}°C</p>\r\n                <p>Погода: ${weatherData.weather[0].description}</p>\r\n                <p>Влажность: ${weatherData.main.humidity}%</p>\r\n                <p>Ветер: ${Math.round(weatherData.wind.speed)} м/с</p>\r\n                <p>Давление: ${Math.round(weatherData.main.pressure * 0.75)} мм рт.ст.</p>\r\n                <img src=\"https://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png\" alt=\"${weatherData.weather[0].main}\">\r\n                <hr>\r\n            </div>\r\n        `;\r\n    });\r\n\r\n    weatherDetails.innerHTML = weatherHTML;\r\n    weatherDiv.style.display = 'block';\r\n}"],"names":["input","document","querySelector","button","getElementById","weatherDiv","cityName","weatherDetails","apiKey","addEventListener","this","value","replace","async","city","trim","style","display","textContent","innerHTML","geocodingUrl","encodeURIComponent","geocodingResponse","fetch","ok","Error","cities","json","length","weatherPromises","map","cityData","weatherUrl","lat","lon","then","res","weatherDataList","weatherHTML","forEach","weatherData","index","name","country","state","Math","round","main","temp","feels_like","weather","description","humidity","wind","speed","pressure","icon","displayAllWeather","Promise","all","error","message"],"sourceRoot":""}